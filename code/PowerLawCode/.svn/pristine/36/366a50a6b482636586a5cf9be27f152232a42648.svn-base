import sys, os

__author__ = 'Nomi'

sys.path.append(os.path.dirname(sys.path[0]))

from defs import *
from utils.msa_functions import get_msa_properties

TITLES = ['id', 'replicate', 'rep_length']

def msa_features_simulations(paths_file, output_name):

    df1 = pd.read_csv(paths_file)

    exceptions = []
    frames = []
    for id in df1.index.values:

        row = df1.loc[[id]]
        path = row.at[id,PATH_COL]

        data = {name: [] for name in TITLES}
        for i in range(1,N_SIM+1):
            file = INDELIBLE_TRUE.format(i=i)
            msa_path = os.path.join(DATA_PATH, path, SIMULATIONS_DIR, file)

            try:
                (n, length) = get_msa_properties(msa_path)
            except:
                if SIMULATIONS_DIR not in exceptions:
                    exceptions.append(SIMULATIONS_DIR)
                continue

            data[TITLES[0]].append(i)
            data[TITLES[1]].append(length)

        block1 = pd.concat([row] * N_SIM).reset_index(drop=True)
        block2 = pd.DataFrame(data)[TITLES]

        frames.append(pd.concat([block1, block2], axis=1))

    result = pd.concat(frames)
    result.to_csv(output_name,index=False)


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='')
    parser.add_argument('-f', required=False,
                        help='file of paths')
    parser.add_argument('-o', required=True,
                        help='output name')
    args = parser.parse_args()

    msa_features_simulations(args.f, args.o)



